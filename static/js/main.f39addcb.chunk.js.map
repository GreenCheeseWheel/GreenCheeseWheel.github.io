{"version":3,"sources":["components/Header.js","components/Home.js","components/About.js","components/Card.js","components/Skills.js","components/Proyectos.js","components/Contacto.js","data.js","App.js","index.js"],"names":["Header","props","console","log","darkmode","react_default","a","createElement","className","href","Home","About","id","Card","onClick","link","trim","window","open","src","image","text","Skills","sectionRef","useRef","useEffect","IntersectionObserver","entries","forEach","entry","target","classList","toggle","isIntersecting","threshold","observe","current","cards","data","map","element","key","ref","Proyectos","Contacto","action","method","type","placeholder","name","skillData","imgData","textData","proyectoData","urlData","App","_useState","useState","_useState2","Object","slicedToArray","setDarkMode","darkmodeOn","skillsData","proyData","obj","push","prevState","bodyElement","document","getElementsByTagName","item","navbarElement","getElementsByClassName","contactElement","linksElements","inputElements","submitElement","strDarkMode","concat","style","index","length","createRootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.f39addcb.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nexport default function Header(props)\r\n{\r\n    console.log(props.darkmode);\r\n    return(\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar--title\">✧ Costa Lucas</div>\r\n            \r\n            <ul className=\"navbar--links\">\r\n                <li className=\"link\"><a href=\"#about-section\"> About </a></li>\r\n                <li className=\"link\"><a href=\"#skills-section\"> Skills </a></li>\r\n                <li className=\"link\"><a href=\"#proyectos-section\"> Proyectos </a></li>\r\n                <li className=\"link\"><a href=\"#contacto-section\"> Contacto </a></li>\r\n             </ul>\r\n            \r\n        </nav>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function Home()\r\n{\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"home--text\">\r\n                <h1>Costa Lucas</h1>\r\n                <h2>React Web Developer</h2>\r\n                <span>KKK</span>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from \"react\"\r\n\r\nexport default function About()\r\n{\r\n    return (\r\n        <section className=\"about section\" id=\"about-section\">\r\n            <h2 className=\"about--title\">About</h2>\r\n            <p className=\"about--text\"> Además de estar cursando el segundo año de mi carrera, estoy sumamente interesado en el \r\n                back-end y la infraestructura que sostiene a las aplicaciones web. \r\n                Comencé a aprender Java por mi cuenta durante el 2021 y luego aprendí sobre el \r\n                framework Spring en el curso 'Spring & Hibernate for beginners', en Udemy, \r\n                del instructor Chad Darby. Además de eso he aprendido a usar Thymeleaf junto con \r\n                Spring Boot y, aunque básico, también tengo manejo de la tecnología JSP. \r\n                Cursé en Alura Latam durante la mayor parte del 2022.\r\n                \r\n            </p>\r\n        </section>\r\n    );\r\n}","import React from \"react\"\r\n\r\nexport default function Card(props)\r\n{\r\n    function clickHandler() {\r\n        if(props.link !== \"#\" && props.link.trim() !== \"\") {\r\n            window.open(props.link, \"__blank\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" onClick={clickHandler}>\r\n            <img className=\"card--image\" src={props.image}></img>\r\n            <p className=\"card--text\">{props.text}</p>\r\n        </div>\r\n    );\r\n\r\n}","import React, {useRef, useEffect} from \"react\"\r\nimport Card from \"./Card\";\r\n\r\nexport default function Skills (props)\r\n{   \r\n    \r\n    const sectionRef = useRef(null);\r\n\r\n     /*\r\n        El siguiente bloque de código se encarga de las animaciones\r\n        de aparición y desaparición de los elementos en pantalla\r\n        según el scroll del usuario\r\n    \r\n    */\r\n    useEffect(() => {\r\n\r\n        const observer = new IntersectionObserver((entries) =>{\r\n            entries.forEach((entry) => {\r\n                entry.target.classList.toggle(\"hide-right\", !entry.isIntersecting);\r\n            });\r\n        }, {threshold: 0.33});\r\n\r\n        observer.observe(sectionRef.current);\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    /*\r\n        Crea un array de componentes del tipo Card para renderizarlos\r\n        en la sección de return\r\n    */\r\n\r\n    const cards = props.data.map(element => {\r\n        return (<Card key={element[1]} link=\"#\" image={element[0]} text={element[1]}/>);\r\n    })\r\n\r\n    return (\r\n        <section ref={sectionRef} className=\"skills section\" id=\"skills-section\">\r\n            <h2>Skills</h2>\r\n            <div className=\"skills--cards\">\r\n                {cards}\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}","import React, {useRef, useEffect} from \"react\"\r\nimport Card from \"./Card\"\r\n\r\nexport default function Proyectos (props)\r\n{   \r\n    const sectionRef = useRef(null);\r\n    const cardsClick = useRef(null);\r\n\r\n     /*\r\n        El siguiente bloque de código se encarga de las animaciones\r\n        de aparición y desaparición de los elementos en pantalla\r\n        según el scroll del usuario\r\n    \r\n    */\r\n    useEffect(() => {\r\n\r\n        const observer = new IntersectionObserver((entries) =>{\r\n            entries.forEach((entry) => {\r\n                entry.target.classList.toggle(\"hide-left\", !entry.isIntersecting);\r\n            });\r\n        }, {threshold: 0.25});\r\n\r\n        observer.observe(sectionRef.current);\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const cards = props.data.map(element => {\r\n        return (<Card key={element[1]} image={element[0]} text={element[1]} link={element[2]}/>);\r\n    })\r\n\r\n\r\n    return (\r\n        <section ref={sectionRef} className=\"proyectos section\" id=\"proyectos-section\">\r\n            <h2 className=\"proyectos--title\">Proyectos</h2>\r\n            <div className=\"proyectos--cards\">\r\n                {cards}\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}","import React, {useRef, useEffect} from \"react\"\r\n\r\nexport default function Contacto(props)\r\n{\r\n\r\n    const sectionRef = useRef(null);\r\n\r\n     /*\r\n        El siguiente bloque de código se encarga de las animaciones\r\n        de aparición y desaparición de los elementos en pantalla\r\n        según el scroll del usuario\r\n    \r\n    */\r\n    useEffect(() => {\r\n    \r\n        const observer = new IntersectionObserver((entries) =>{\r\n               entries.forEach((entry) => {\r\n                   entry.target.classList.toggle(\"hide-right\", !entry.isIntersecting);\r\n               });\r\n        }, {threshold: 0.25});\r\n    \r\n        observer.observe(sectionRef.current);\r\n    \r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"contacto section\" id=\"contacto-section\">\r\n            <h2 className=\"contacto--title\">¡Cont&aacute;ctame!</h2>\r\n            <form ref={sectionRef} action=\"https://formsubmit.co/thegreencheesewheel@gmail.com\" method=\"POST\" className=\"contacto--form\">\r\n                <input type=\"text\" placeholder=\"Nombre\" name=\"name\" className=\"contacto--input\"></input>\r\n                <input type=\"email\" placeholder=\"e-mail\" name=\"email\" className=\"contacto--input\"></input>\r\n                <input type=\"text\" placeholder=\"Asunto\" name=\"about\" className=\"contacto--input\"></input>\r\n                <textarea placeholder=\"Mensaje\" name=\"message\" className=\"contacto--input msg\"></textarea>\r\n                <input type=\"submit\" className=\"contacto--input contacto--submit\"></input>\r\n            </form>\r\n        </section>\r\n    );\r\n}","export default {\r\n    skillData: [\r\n        {\r\n            imgData: \"./img/html.svg\",\r\n            textData: \"HTML 5\"\r\n        },\r\n\r\n        {\r\n            imgData: \"./img/css.svg\",\r\n            textData: \"CSS 3\"\r\n        },\r\n\r\n        {\r\n            imgData: \"./img/javascript.svg\",\r\n            textData: \"Javascript\"\r\n        },\r\n\r\n        {\r\n            \r\n            imgData: \"./img/react.svg\",\r\n            textData: \"React\"\r\n        },\r\n        \r\n        {\r\n            imgData: \"./img/java.svg\",\r\n            textData: \"Java\"\r\n        },\r\n\r\n        {   \r\n            imgData: \"./img/springboot.svg\",\r\n            textData: \"Spring\"\r\n        } \r\n         \r\n         \r\n\r\n\r\n    ],\r\n    proyectoData: [\r\n        {\r\n            imgData: \"./img/proy/CustomerRel.png\",\r\n            textData: \"CRM Application (Back-end)\",\r\n            urlData: \"https://github.com/GreenCheeseWheel/CustomerRelManag\"\r\n        },\r\n        {\r\n            imgData: \"./img/proy/ECommerce.png\",\r\n            textData: \"E-Commerce (Front-end)\",\r\n            urlData: \"https://github.com/GreenCheeseWheel/ECommerceWeb\"\r\n        },\r\n        {\r\n            imgData: \"./img/proy/Landing.png\",\r\n            textData: \"Landing Page (Front-end)\",\r\n            urlData: \"https://github.com/GreenCheeseWheel/LandingPage\"\r\n        },\r\n        {\r\n            imgData: \"./img/proy/Security.png\",\r\n            textData: \"Spring Security Application (Back-end)\",\r\n            urlData: \"https://github.com/GreenCheeseWheel/secureAppDemo\"\r\n        },\r\n        {\r\n            imgData: \"./img/proy/portfolio.png\",\r\n            textData: \"Portfolio (Repo)\",\r\n            urlData: \"https://github.com/GreenCheeseWheel/GreenCheeseWheel.github.io\"\r\n        }\r\n\r\n    ]\r\n}","import React, {useState} from \"react\"\r\n\r\nimport Header from \"./components/Header\"\r\nimport Home from \"./components/Home\"\r\nimport About from \"./components/About\"\r\nimport Skills from \"./components/Skills\"\r\nimport Proyectos from \"./components/Proyectos\"\r\nimport Contacto from \"./components/Contacto\"\r\n\r\nimport data from \"./data\"\r\n\r\nexport default function App()\r\n{   \r\n\r\n    const [darkmode, setDarkMode] = useState(\"Light Mode\");\r\n    var darkmodeOn = true;\r\n    var skillsData = [];\r\n    var proyData = [];\r\n    \r\n    // Poblamos el array de skillsData con las url y los textos\r\n    data.skillData.forEach((obj) =>\r\n    {\r\n        skillsData.push([obj.imgData, obj.textData]);\r\n    }\r\n    );\r\n\r\n\r\n    // Poblamos el array de proyData con las url y los textos\r\n    data.proyectoData.forEach((obj) => \r\n        {\r\n            proyData.push([obj.imgData, obj.textData, obj.urlData]);\r\n        }\r\n    );\r\n\r\n    \r\n    // Función setter para el Dark Mode que configura el color del\r\n    // tag body inmediatamente \r\n\r\n    function changeDarkMode() {\r\n        \r\n        setDarkMode(prevState => {\r\n\r\n            //\r\n            // Obtenemos los elementos para cambiar sus estilos\r\n            let bodyElement = document.getElementsByTagName(\"body\").item(0);\r\n            let navbarElement = document.getElementsByClassName(\"navbar\").item(0);\r\n            let contactElement = document.getElementsByClassName(\"contacto\").item(0);\r\n            \r\n            let linksElements = document.getElementsByTagName(\"a\");\r\n            let inputElements = document.getElementsByClassName(\"contacto--input\");\r\n            let submitElement = document.getElementsByClassName(\"contacto--submit\").item(0);\r\n\r\n            //\r\n            // Chequeamos si el dark-mode está activado o no y creamos el string para aplicar estilos\r\n            darkmodeOn = (prevState === \"Light Mode\") ? false : true;\r\n\r\n            let strDarkMode = `background-color: ${darkmodeOn ? \"#251F30\" : \"#9394a5\"}; color: ${darkmodeOn ? \"snow\" : \"black\"};`;\r\n            \r\n            //\r\n            // Aplicamos los estilos a los elementos\r\n            bodyElement.style = `background-color: ${darkmodeOn ? \"#282c34\" : \"#e4e5f1\"}; color: ${darkmodeOn ? \"snow\" : \"black\"};`;\r\n            navbarElement.style = strDarkMode;\r\n            contactElement.style = strDarkMode;\r\n        \r\n            for(let index = 0; index < linksElements.length; index++ )\r\n            {\r\n                linksElements.item(index).style = strDarkMode;\r\n            }\r\n\r\n            for(let index = 0; index < inputElements.length; index++ )\r\n            {\r\n                inputElements.item(index).style = `border-bottom: 3px solid ${darkmodeOn ? \"aquamarine\" : \"black\"}; \r\n                background-color: inherit;\r\n                color: ${darkmodeOn ? \"snow\" : \"black\"};\r\n                `;\r\n            }\r\n            \r\n            submitElement.style = `color: snow; background-color: ${darkmodeOn ? \"#45a6ff\" : \"#5cb85c\"};`\r\n\r\n            //\r\n            // Cambiamos el estado\r\n            return ((prevState === \"Light Mode\") ? \"Dark Mode\" : \"Light Mode\");\r\n        });\r\n\r\n    }\r\n\r\n    \r\n    /* DOCUMENTO A RENDERIZAR */\r\n\r\n    return (\r\n\r\n        <div>\r\n            <header>\r\n                <Header darkmode={darkmodeOn} />\r\n                <div className=\"navbar--darkmode---container\">\r\n                    <div className=\"navbar--darkmode\" onClick={changeDarkMode}>{darkmode} 🝰</div>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <Home />\r\n                <About />\r\n                <Skills data={skillsData.map(element => element)} darkmode={darkmodeOn} />\r\n                <Proyectos data={proyData.map(element => element)} darkmode={darkmodeOn}/>\r\n                <Contacto  darkmode={darkmodeOn}/>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\nimport {createRoot} from \"react-dom/client\"\r\nimport \"./style.css\"\r\n\r\nimport App from \"./App\"\r\n\r\nconst createRootElement = document.getElementById(\"root\");\r\nconst root = createRoot(createRootElement);\r\n\r\nroot.render(<App />);\r\n\r\n\r\n\r\n/** \r\n * HACE FALTA TERMINAR LA PARTE DE HOME ANTES DE LA SECCION ABOUT\r\n * \r\n * \r\n*/\r\n"],"sourceRoot":""}